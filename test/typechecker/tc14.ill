module TC14Assignment
  data Bool = True | False
  data Maybe a = Just a | Nothing

  impl Show Bool
    fn show (True)
      'True'
    or show (False)
      'False'
    end
  end

  trait Show a
    show :: a -> String
  end

  trait Functor f
    map :: (a -> b) -> f a -> f b
  end

  impl Functor Maybe
    fn map(f, Just x)
      Just(f(x))
    or map(f, Nothing)
      Nothing
    end
  end

  fn x (x)
    a = x
    a
  end

  fn z (x)
    if x then
      show(x)
    else
      'a'
    end
  end

  fn y ()
    a = 1
    if True then
      a
    else
      5
    end
  end

  fn bodyAccumulatesConstraints ()
    # show('Text')
    show(True)

    map(x, Just(False))
  end

  zzz :: String
  fn zzz ()
    show(True)
  end

  fn yyy (x)
    map(show, x)
  end
end
