module Core2
  trait Show a
    show :: a -> String
  end

  impl Show a | Show (List a)
    fn show(Cons el ls)
      show(ls)
    or show(Nil)
      ""
    end
  end

  impl Show Int
    fn show(a)
      "1"
    end
  end

  data List a = Cons a (List a) | Nil
  data Bool = True | False

  fn x(a, b)
    x(case b of
      when True: show(1)
      when False: show(2)
    end, b)
  end
end
