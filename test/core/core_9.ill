module Core9
  data List a = Cons a (List a) | Nil

  trait Group a
    minus :: a -> a -> a
  end

  impl Group Int
    fn minus(a, b)
      minusInt(a, b)
    end
  end

  partialIx :: Int -> List a -> a
  fn partialIx(0, Cons x xs)
    x
  or partialIx(i, Cons x xs)
    # partialIx doesnt get the (@ a) application
    partialIx(i - 1, xs)
  end
end
