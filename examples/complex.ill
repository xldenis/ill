module ComplexRun
  fn build_list(int)
    case int > 0 of
      when False: Nil
      when True: Cons(int, build_list(int - 1))
    end
  end

  fn main ()
    summed_maybe = Just(50) + Nothing

    list = case summed_maybe of
      when Just x: build_list(x)
      when Nothing: Nil
    end
    show(fmap(fn (x) = x + 10 end, list) + list)
  end
end
